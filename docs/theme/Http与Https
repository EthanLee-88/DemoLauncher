
  Http使用明文传输数据，一个网络请求中，经历过三次握手之后，客户端和服务端即可进行双向的数据传输，
  而Http协议下，数据采用明文传输，不安全。

  Https在Http基础上进行了传输数据的加密，Http默认使用端口80，Https默认使用端口443.

  SSL（SSL或TLS）协议是Https协议的安全基础，SSL采用公钥加密算法（RSA加密算法），解密使用私钥。
  SSL证书是一个二进制文件件，里面包含经过认证的网站公钥，以及一些元数据。SSL数字证书由服务端
  向CA机构申请，服务端提交公钥及公司信息等情况后，CA机构审核通过即颁发证书。

  对称加密和非对称加密相结合。客户端使用机构认证的数字证书获取公钥，然后再用公钥加密一个和服务器共享的秘钥。
  这个被服务端公钥加密的共享秘钥只有服务端的私钥才能解密。这样的话共享秘钥只有客户端和服务端才拥有，两者就可以
  使用共享秘钥进行数据的对称加密了。
  共享秘钥是客户端生成的一个随机数。

  对称加密方式 ：AES、DES

  HTTP端口 ：80
  Https端口 ：443


  HTTP ：超文本传输协议，应用层数据传输协议
  TCP ：传输层控制协议

  Https://www.baidu.com
  Https : 传输层协议
  www : 网络名，万维网
  www.baidu.com : 域名
  主机 ：www.baidu.com

  一个域名只能对应一个 IP地址，而一个 IP地址可以映射多个域名。

  IP协议 ： 客户端发起请求后，DNS服务器会用域名解析处与之映射的服务端 IP地址。
  TCP协议 ：DNS服务器解析出 IP地址后，客户端就根据地址和服务端进行 TCP三次握手，确认
           双方都有数据收发的能力。然后进建立了 TCP连接。
  HTTP协议 ：客户端和服务端建立起 TCP连接后。就可以使用应用层HTTP协议进行通信了
            HTTP请求包括请求行、请求头、请求体等。HTTP相应包括状态行、响应头
            响应数据等。

  请求行：包括请求方法（get、post等）、协议版本等
  请求头：主机、类型、长度连接属性等
  状态行 ：状态码、协议版本等
  响应头 ：日期、类型、长度、最后修改时间等

  HTTP请求响应结束之后就到了 TCP4次挥手断开连接，除非请求时设置了 keep-alive（长连接）


  TCP三次握手 ：1、客户端向发送 SYN同步包，状态置为已发送（SYN_SENT）
              2、服务端收到，给客户端一个响应并发同步包，状态置为已准备好（SYN_RCVD）
              3、客户端收到，状态置为已连接。给服务端发响应，服务端收到后状态置为已连接（ESTABLISHED）

              TCP是双攻传输模式，需3次握手才能确认双方都有收发能力，从而建立双向传输

  TCP四次挥手 ：1、客户端向服务端发送FIN包，进入结束等待状态（FIN_WAIT_1）
               2、服务端收到后，给一个响应（ACK），进入等待关闭状态（CLOSE_WAIT）
               3、等服务端数据发送完后，向客户端发送FIN，进入最后响应状态（LAST_ACK）
               4、客户端收到后，进入等待状态（TIME_WAIT），并回复（ACK）。服务端收到
                  则关闭，客户端等待2MSL关闭（CLOSED）
  * 第二、第三次挥手分两步，是因为服务端收到断开连接请求时，可能还有数据没发完
  * 要等待 2MSL是因为要确保服务端收到最后一个 ACK，如果没收到的话服务端会重发FIN。
  * TCP通过检验和超时重连等机制建立可靠传输

  断点续传
  HttpURLConnection .setRequestProperty("Range", "bytes=" + startPos + "-" + endPos);